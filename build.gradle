buildscript {
    repositories {
        maven {
            url 'http://repo.jenkins-ci.org/public/'
        }
        jcenter()
    }
    dependencies {
        classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.39.0'
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.3.4'
}

apply plugin: 'java'
apply plugin: 'org.jenkins-ci.jpi'
apply plugin: 'codenarc'
apply plugin: 'idea'

repositories {
    maven {
        url "http://repo.jenkins-ci.org/public/"
    }
    jcenter()
    maven {
        url "https://m2proxy.atlassian.com/repository/public"
    }
}

group = 'org.jenkins-ci.plugins'
description = 'JIRA Trigger'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
    jiraIntegrationTest {
        compileClasspath += main.output + test.output + integrationTest.output
        runtimeClasspath += main.output + test.output + integrationTest.output
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    jiraIntegrationTestCompile.extendsFrom integrationTestCompile
    jiraIntegrationTestRuntime.extendsFrom integrationTestRuntime
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.11'
    compile('com.atlassian.jira:jira-rest-java-client-core:5.2.1') {
        exclude group: 'org.slf4j'
    }
    compile 'com.atlassian.util.concurrent:atlassian-util-concurrent:3.0.0'
    compile 'com.google.inject.extensions:guice-multibindings:4.0'
    testCompile 'org.jenkins-ci:test-annotations:1.2'
    testCompile 'org.jenkins-ci.plugins:matrix-auth:1.7@jar'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.5' // used by Spock
    testCompile 'org.objenesis:objenesis:2.5.1' // used by Spock
    integrationTestCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    jenkinsTest 'org.jenkins-ci.plugins.workflow:workflow-job:2.11.2@jar'
    jenkinsTest 'org.jenkins-ci.plugins.workflow:workflow-api:2.15@jar' // used by workflow-job
    jenkinsTest 'org.jenkins-ci.plugins.workflow:workflow-step-api:2.10@jar' // used by workflow-job
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}
task jiraIntegrationTest(type: Test) {
    testClassesDirs = sourceSets.jiraIntegrationTest.output
    classpath = sourceSets.jiraIntegrationTest.runtimeClasspath
    mustRunAfter integrationTest
}
check.dependsOn integrationTest

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

jenkinsPlugin {
    coreVersion = '2.76'
    shortName = 'jira-trigger'
    displayName = 'JIRA Trigger Plugin'
    url = 'http://wiki.jenkins-ci.org/display/JENKINS/JIRA+Trigger+Plugin'
    gitHubUrl = 'https://github.com/ceilfors/jira-trigger-plugin'
    compatibleSinceVersion = '0.2.0'

    // enable injection of additional tests for checking the syntax of Jelly and other things
    disabledTestInjection = false

    // the output directory for the localizer task relative to the project root, defaults to the value shown
    localizerOutputDir = "${project.buildDir}/generated-src/localizer"

    fileExtension = 'jpi'

    developers {
        developer {
            id 'ceilfors'
            name 'Wisen Tanasa'
            email 'wisen@ceilfors.com'
        }
    }
}

scmVersion {
    tag {
        prefix = 'v'
        versionSeparator = ''
    }
}
project.version = scmVersion.version

codenarc {
    configFile = file('config/codenarc/rules.groovy')
    toolVersion = '1.1'
}
codenarcTest {
    configFile = file('config/codenarc/rulesTest.groovy')
}
codenarcIntegrationTest {
    configFile = file('config/codenarc/rulesTest.groovy')
}
codenarcJiraIntegrationTest {
    configFile = file('config/codenarc/rulesTest.groovy')
}

idea {
    module {
        testSourceDirs += file('src/integrationTest/groovy')
        testSourceDirs += file('src/jiraIntegrationTest/groovy')
        scopes.TEST.plus += [ configurations.integrationTestCompile, configurations.jiraIntegrationTestRuntime ]
    }
}